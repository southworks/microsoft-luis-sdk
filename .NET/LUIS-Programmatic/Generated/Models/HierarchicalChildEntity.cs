// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class HierarchicalChildEntity : ChildEntity
    {
        /// <summary>
        /// Initializes a new instance of the HierarchicalChildEntity class.
        /// </summary>
        public HierarchicalChildEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the HierarchicalChildEntity class.
        /// </summary>
        /// <param name="id">The GUID belonging to a child entity.</param>
        /// <param name="name">The name of a child entity.</param>
        /// <param name="readableType">Possible values include: 'Entity
        /// Extractor', 'Hierarchical Entity Extractor', 'Hierarchical Child
        /// Entity Extractor', 'Composite Entity Extractor', 'Closed List
        /// Entity Extractor', 'Prebuilt Entity Extractor', 'Intent
        /// Classifier'</param>
        public HierarchicalChildEntity(string id = default(string), string name = default(string), double? typeId = default(double?), string readableType = default(string))
            : base(id, name)
        {
            TypeId = typeId;
            ReadableType = readableType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "typeId")]
        public double? TypeId { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Entity Extractor',
        /// 'Hierarchical Entity Extractor', 'Hierarchical Child Entity
        /// Extractor', 'Composite Entity Extractor', 'Closed List Entity
        /// Extractor', 'Prebuilt Entity Extractor', 'Intent Classifier'
        /// </summary>
        [JsonProperty(PropertyName = "readableType")]
        public string ReadableType { get; set; }

    }
}
