// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.CognitiveServices.Language.LUIS.Programmatic.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Endpoint URLs for prebuilt Cortana applications.
    /// </summary>
    public partial class PersonalAssistantUrls
    {
        /// <summary>
        /// Initializes a new instance of the PersonalAssistantUrls class.
        /// </summary>
        public PersonalAssistantUrls()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PersonalAssistantUrls class.
        /// </summary>
        public PersonalAssistantUrls(string english = default(string), string chinese = default(string), string french = default(string), string spanish = default(string), string italian = default(string))
        {
            English = english;
            Chinese = chinese;
            French = french;
            Spanish = spanish;
            Italian = italian;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "English")]
        public string English { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Chinese")]
        public string Chinese { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "French")]
        public string French { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Spanish")]
        public string Spanish { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Italian")]
        public string Italian { get; set; }

    }
}
